coord_quickmap()
counties %>% filter(county!="yellowstonenational")
counties %>% filter(county=="yellowstonenational")
test <- counties %>% filter(county!="yellowstonenational")
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = state), colour = rgb(1,1,1,0.2)) +
theme(legend.position="none") +
coord_quickmap()
df <- read_csv("results_by_county-nations_2008-2016.csv") %>% filter(StateCode!="AK", StateCode!="HI")
df$County <- as.factor(df$County)
df$StateCode <- as.factor(df$StateCode)
df$State <- as.factor(tolower(df$State))
df$NationCode <- as.factor(df$NationCode)
df$Nation <- as.factor(df$Nation)
test <- merge(test, df, by="CountyFIPS")
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = rgb(1,1,1,0.2)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = State), colour = rgb(1,1,1,0.2)) +
theme(legend.position="none") +
coord_quickmap()
df <- read_csv("results_by_county-nations_2008-2016.csv") %>% filter(StateCode!="AK", StateCode!="HI")
df$County <- as.factor(df$County)
df$StateCode <- as.factor(df$StateCode)
df$State <- as.factor(tolower(df$State))
df$NationCode <- as.factor(df$NationCode)
df$Nation <- as.factor(df$Nation)
df <- merge(test, df, by="CountyFIPS")
df <- merge(counties, df, by="CountyFIPS")
df <- read_csv("results_by_county-nations_2008-2016.csv") %>% filter(StateCode!="AK", StateCode!="HI")
df$County <- as.factor(df$County)
df$StateCode <- as.factor(df$StateCode)
df$State <- as.factor(tolower(df$State))
df$NationCode <- as.factor(df$NationCode)
df$Nation <- as.factor(df$Nation)
df <- merge(counties, df, by="CountyFIPS")
ggplot(df, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = State), colour = rgb(1,1,1,0.2)) +
theme(legend.position="none") +
coord_quickmap()
head(df)
head(counties)
df <- read_csv("results_by_county-nations_2008-2016.csv") %>% filter(StateCode!="AK", StateCode!="HI")
head(df)
df$County <- as.factor(df$County)
df$StateCode <- as.factor(df$StateCode)
df$State <- as.factor(tolower(df$State))
df$NationCode <- as.factor(df$NationCode)
df$Nation <- as.factor(df$Nation)
test <- merge(counties, df, by="CountyFIPS")
head(test)
df <- read_csv("results_by_county-nations_2008-2016.csv") %>% filter(StateCode!="AK", StateCode!="HI")
df$County <- as.factor(df$County)
df$StateCode <- as.factor(df$StateCode)
df$State <- as.factor(df$State)
df$NationCode <- as.factor(df$NationCode)
df$Nation <- as.factor(df$Nation)
test <- merge(counties, df, by="CountyFIPS")
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = State), colour = rgb(1,1,1,0.2)) +
theme(legend.position="none") +
coord_quickmap()
counties <- counties %>% filter(county!="yellowstonenational")
df <- read_csv("results_by_county-nations_2008-2016.csv") %>% filter(StateCode!="AK", StateCode!="HI")
df$County <- as.factor(df$County)
df$StateCode <- as.factor(df$StateCode)
df$State <- as.factor(df$State)
df$NationCode <- as.factor(df$NationCode)
df$Nation <- as.factor(df$Nation)
test <- merge(counties, df, by="CountyFIPS")
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = State), colour = rgb(1,1,1,0.2)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = rgb(1,1,1,0.2)) +
theme(legend.position="none") +
coord_quickmap()
install.packages("choroplethr")
library("choroplethr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
df.president
map_data("df.president")
data(df_president)
head(df_president)
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = "black") +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = NA) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = "black", size=0.5) +
geom_polygon(aes(fill = State), colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = "black", size=0.5) +
geom_polygon(colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = "black", size=0.5) +
# geom_polygon(aes(fill = State), colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = "black", size=0.1) +
# geom_polygon(aes(fill = State), colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = "black", size=0.1) +
geom_polygon(aes(fill = State), colour = "black", size=0.1) +
# geom_polygon(aes(fill = State), colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation), colour = "black", size=0.1) +
# geom_polygon(aes(fill = State), colour = "black", size=0.1) +
# geom_polygon(aes(fill = State), colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
head(test)
ggplot(test, aes(Long, Lat, group = Group)) +
# geom_polygon(aes(fill = Nation), colour = "black", size=0.1) +
geom_polygon(aes(fill = Winner_2016)) +
# geom_polygon(aes(fill = State), colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
# geom_polygon(aes(fill = Nation), colour = "black", size=0.1) +
geom_polygon(aes(fill = Dem_2016)) +
# geom_polygon(aes(fill = State), colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
# geom_polygon(aes(fill = Nation), colour = "black", size=0.1) +
geom_polygon(aes(fill = GOP_2016)) +
# geom_polygon(aes(fill = State), colour = "black", size=0.1) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
# geom_polygon(aes(fill = Nation), colour = "black", size=0.1) +
geom_polygon(fill = NA, colour = "black", size=0.1) +
geom_polygon(aes(fill = winner_2016)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
# geom_polygon(aes(fill = Nation), colour = "black", size=0.1) +
geom_polygon(fill = NA, colour = "black", size=0.1) +
geom_polygon(aes(fill = Winner_2016)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black", size=0.2) +
geom_polygon(aes(fill = Nation)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black", size=0.5) +
geom_polygon(aes(fill = Nation)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black") +
geom_polygon(aes(fill = Nation)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black", size=5) +
geom_polygon(aes(fill = Nation)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(group=State), colour = "black", size=1) +
geom_polygon(aes(fill = Nation)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(aes(fill = Nation)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black", size=0.5) +
geom_polygon(aes(fill = Nation)) +
theme(legend.position="none") +
coord_quickmap()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black") +
geom_polygon(aes(fill = Nation)) +
coord_map("bonne",  param=45) +
theme_void()
library(tidyverse)
library(choroplethr)
county_choropleth()
install.packages("choroplethrMaps")
library(choroplethrMaps)
county_choropleth()
data(df_pop_county)
head(df_pop_county)
df <- read_csv("results_by_county-nations_2008-2016.csv") %>% filter(StateCode!="AK", StateCode!="HI")
df$County <- as.factor(df$County)
df$StateCode <- as.factor(df$StateCode)
df$State <- as.factor(df$State)
df$NationCode <- as.factor(df$NationCode)
df$Nation <- as.factor(df$Nation)
county_choropleth(df, region="CountyFIPS", value="Dem_2016")
choroplethr_acs(tableId="B19301", lod="county")
state_choroplethr_acs(tableId="B19301", lod="county")
library(tidyverse)
library(maps)
fips <- county.fips
fips$state <- NA
fips$county <- NA
for (i in 1:nrow(fips)) {
fips$state[i] <- unlist(strsplit(as.character(fips$polyname[i]), "[,]"))[1]
fips$county[i] <- unlist(strsplit(as.character(fips$polyname[i]), "[,]"))[2]
}
fips$county <- gsub(" ","", fips$county)
fips$county <- gsub("[.]","", fips$county)
fips <- select(fips, -polyname)
colnames(fips) <- c("CountyFIPS", "state", "county")
fips <- fips %>% filter(CountyFIPS!=12091, CountyFIPS!=22099, CountyFIPS!=37053,
CountyFIPS!=48167, CountyFIPS!=51001, CountyFIPS!=53053, CountyFIPS!=53055)
fips <- rbind(fips, c(12091, "florida", "okaloosa"))
fips <- rbind(fips, c(22099, "louisiana", "stmartin"))
fips <- rbind(fips, c(37053, "north carolina", "currituck"))
fips <- rbind(fips, c(48167, "texas", "galveston"))
fips <- rbind(fips, c(51001, "virginia", "accomack"))
fips <- rbind(fips, c(53053, "washington", "pierce"))
fips <- rbind(fips, c(53055, "washington", "sanjuan"))
counties <- map_data("county")
colnames(counties) <- c("Long", "Lat", "Group", "Order", "state", "county")
counties$county <- gsub(" ","", counties$county)
counties$county <- gsub("[.]","", counties$county)
counties$CountyFIPS <- NA
head(fips)
head(counties)
counties <- map_data("county")
colnames(counties) <- c("Long", "Lat", "Group", "Order", "state", "county")
counties$county <- gsub(" ","", counties$county)
counties$county <- gsub("[.]","", counties$county)
counties <- merge(fips, counties, by=c("state", "county"))
head(counties)
counties <- counties %>% filter(county!="yellowstonenational")
df <- read_csv("results_by_county-nations_2008-2016.csv") %>% filter(StateCode!="AK", StateCode!="HI")
df$County <- as.factor(df$County)
df$StateCode <- as.factor(df$StateCode)
df$State <- as.factor(df$State)
df$NationCode <- as.factor(df$NationCode)
df$Nation <- as.factor(df$Nation)
test <- merge(counties, df, by="CountyFIPS")
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black") +
geom_polygon(aes(fill = Nation)) +
coord_map("bonne",  param=45) +
theme_void()
ggplot(test, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black") +
geom_polygon(aes(fill = Nation)) +
coord_map("bonne",  param=45) +
theme_void()
fips <- county.fips
fips <- county.fips
fips <- county.fips
fips <- county.fips
fips <- county.fips
fips <- county.fips
fips$state <- NA
fips$county <- NA
for (i in 1:nrow(fips)) {
fips$state[i] <- unlist(strsplit(as.character(fips$polyname[i]), "[,]"))[1]
fips$county[i] <- unlist(strsplit(as.character(fips$polyname[i]), "[,]"))[2]
}
fips$county <- gsub(" ","", fips$county)
fips$county <- gsub("[.]","", fips$county)
fips <- select(fips, -polyname)
colnames(fips) <- c("CountyFIPS", "state", "county")
fips <- fips %>% filter(CountyFIPS!=12091, CountyFIPS!=22099, CountyFIPS!=37053,
CountyFIPS!=48167, CountyFIPS!=51001, CountyFIPS!=53053, CountyFIPS!=53055)
fips <- rbind(fips, c(12091, "florida", "okaloosa"))
fips <- rbind(fips, c(22099, "louisiana", "stmartin"))
fips <- rbind(fips, c(37053, "north carolina", "currituck"))
fips <- rbind(fips, c(48167, "texas", "galveston"))
fips <- rbind(fips, c(51001, "virginia", "accomack"))
fips <- rbind(fips, c(53053, "washington", "pierce"))
fips <- rbind(fips, c(53055, "washington", "sanjuan"))
counties <- map_data("county")
colnames(counties) <- c("Long", "Lat", "Group", "Order", "state", "county")
counties$county <- gsub(" ","", counties$county)
counties$county <- gsub("[.]","", counties$county)
counties$CountyFIPS <- NA
for (i in 1:nrow(counties)) {
state.tmp <- counties$state[i]
county.tmp <- counties$county[i]
counties$CountyFIPS[i] <- filter(fips, state==state.tmp, county==county.tmp)$CountyFIPS
}
counties <- counties %>% filter(county!="yellowstonenational")
df <- read_csv("results_by_county-nations_2008-2016.csv") %>% filter(StateCode!="AK", StateCode!="HI")
df$County <- as.factor(df$County)
df$StateCode <- as.factor(df$StateCode)
df$State <- as.factor(df$State)
df$NationCode <- as.factor(df$NationCode)
df$Nation <- as.factor(df$Nation)
head(df)
View(df)
test <- merge(counties, df, by="CountyFIPS")
View(test)
load("~/Box Sync/Personal/polls2016/election.Rda")
View(election)
states <- df %>% group_by(State) %>% summarise(Dem=sum(Dem_2016), GOP=sum(GOP_2016), Total=sum(Total_2016), Diff=(Dem-GOP)/Total)
states
states <- df %>% group_by(State, County) %>% summarise(Dem=sum(Dem_2016), GOP=sum(GOP_2016), Total=sum(Total_2016), Diff=(Dem-GOP)/Total)
states
head(df)
summary(df)
df %>% group_by(State) %>% summarise(Dem=sum(Dem_2016), GOP=sum(GOP_2016), Total=sum(Total_2016), Diff=(Dem-GOP)/Total)
states <- df %>% group_by(StateCode) %>% summarise(Dem=sum(Dem_2016), GOP=sum(GOP_2016), Total=sum(Total_2016), Diff=(Dem-GOP)/Total)
library(tidyverse)
head(df)
df$pDem_2008 <- df$Dem_2008/df$Total_2008
df$pGOP_2008 <- df$GOP_2008/df$Total_2008
df$diff_2008 <- (df$Dem_2008-df$GOP_2008)/df$Total_2008
df$pDem_2012 <- df$Dem_2012/df$Total_2012
df$pGOP_2012 <- df$GOP_2012/df$Total_2012
df$diff_2012 <- (df$Dem_2012-df$GOP_2012)/df$Total_2012
df$pDem_2016 <- df$Dem_2016/df$Total_2016
df$pGOP_2016 <- df$GOP_2016/df$Total_2016
df$diff_2016 <- (df$Dem_2016-df$GOP_2016)/df$Total_2016
df$change_2016 <- df$diff_2016-df$diff_2012
states <- df %>% group_by(State) %>% summarise(Dem=sum(Dem_2016), GOP=sum(GOP_2016), Total=sum(Total_2016), Diff=(Dem-GOP)/Total)
states <- df %>% group_by(State) %>% summarise(N=n())
states <- df %>% group_by(State) %>% summarise(N=n())
states <- df %>% group_by(State) %>% summarise(N=mean(Dem_2012))
detach("package:choroplethr", unload=TRUE)
detach("package:choroplethrMaps", unload=TRUE)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
states <- df %>% group_by(State) %>% summarise(Dem=sum(Dem_2016), GOP=sum(GOP_2016), Total=sum(Total_2016), Diff=(Dem-GOP)/Total)
states
df$pDem_2008 <- 100*df$Dem_2008/df$Total_2008
df$pGOP_2008 <- 100*df$GOP_2008/df$Total_2008
df$diff_2008 <- 100*(df$Dem_2008-df$GOP_2008)/df$Total_2008
df$pDem_2012 <- 100*df$Dem_2012/df$Total_2012
df$pGOP_2012 <- 100*df$GOP_2012/df$Total_2012
df$diff_2012 <- 100*(df$Dem_2012-df$GOP_2012)/df$Total_2012
df$pDem_2016 <- 100*df$Dem_2016/df$Total_2016
df$pGOP_2016 <- 100*df$GOP_2016/df$Total_2016
df$diff_2016 <- 100*(df$Dem_2016-df$GOP_2016)/df$Total_2016
df$change_2016 <- df$diff_2016-df$diff_2012
states <- df %>% group_by(State) %>%
summarise(Dem=sum(Dem_2016), GOP=sum(GOP_2016), Total=sum(Total_2016), Diff=100*(Dem-GOP)/Total)
states
i=1
filter(states, State==df$State[i])$Diff
i
nations <- df %>% group_by(Nation) %>%
summarise(Dem=sum(Dem_2016), GOP=sum(GOP_2016), Total=sum(Total_2016), Diff=100*(Dem-GOP)/Total)
View(nations)
df$diffState_2016 <- NA
df$diffNation_2016 <- NA
for (i in 1:nrow(df)) {
df$diffState_2016[i] <- filter(states, State==df$State[i])$Diff
df$diffNation_2016[i] <- filter(nations, Nation==df$Nation[i])$Diff
}
View(df)
county2016 <- merge(counties, df, by="CountyFIPS")
ggplot(county2016, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black") +
geom_polygon(aes(fill = Nation)) +
coord_map("bonne",  param=45) +
theme_void()
str(county2016)
county2016 <- merge(counties, df, by="CountyFIPS") %>% select(-state, -county)
county2016$CountyFIPS <- as.factor(county2016$CountyFIPS)
county2016$Winner2016 <- as.factor(county2016$Winner2016)
county2016$Winner_2016 <- as.factor(county2016$Winner_2016)
str(county2016)
save(county2016, file="county2016.Rda")
View(county2016)
county2016 <- df
save(county2016, file="county2016.Rda")
map2016 <- merge(counties, df, by="CountyFIPS") %>% select(-state, -county)
map2016$CountyFIPS <- as.factor(map2016$CountyFIPS)
map2016$Winner_2016 <- as.factor(map2016$Winner_2016)
save(map2016, file="map2016.Rda")
ggplot(map2016, aes(Long, Lat, group = Group)) +
geom_polygon(fill = NA, colour = "black") +
geom_polygon(aes(fill = Nation)) +
coord_map("bonne",  param=45) +
theme_void()
ggplot(map2016, aes(Long, Lat, group = Group)) +
geom_polygon(aes(group=Nation), fill = NA, colour = "black") +
geom_polygon(aes(fill = Nation)) +
coord_map("bonne",  param=45) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Nation)) +
geom_polygon(aes(group=Nation), fill = NA, colour = "black") +
geom_polygon(aes(fill = Nation)) +
coord_map("bonne",  param=45) +
theme_void()
head(map2016)
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(group=Nation), colour = "black") +
geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne",  param=45) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(group=County, fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333") +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016, alpha=Total_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333") +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016, alpha=Total_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333", limits=c(0,3100)) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333", limits=c(0,3100)) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333", limits=c(2000,3100)) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333", limits=c(0,500)) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333", limits=c(-10,10)) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333", limits=c(-40,40)) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333", limits=c(-80,80)) +
theme_void()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low="#FF3333", limits=c(-90,90)) +
theme_void()
colourpicker:::colourPickerAddin()
shinyjs:::colourPickerAddin()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low=c("#FFA8A8"), limits=c(-90,90)) +
theme_void()
colourpicker:::colourPickerAddin()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high="#3399FF", low=c("#FF9999"), limits=c(-90,90)) +
theme_void()
colourpicker:::colourPickerAddin()
colourpicker:::colourPickerAddin()
ggplot(map2016, aes(Long, Lat, group=Group)) +
geom_polygon(aes(fill=diff_2016), colour = "black") +
# geom_polygon(aes(fill = diff_2016)) +
coord_map("bonne", param=45) +
scale_fill_gradient(high=c("#0000FF"), low=c("#FF0000"), limits=c(-90,90)) +
theme_void()
devtools::install_github('rstudio/DT')
devtools::install_github("csgillespie/addinmanager")
install.packages("taskscheduleR")
remove.packages("DT")
